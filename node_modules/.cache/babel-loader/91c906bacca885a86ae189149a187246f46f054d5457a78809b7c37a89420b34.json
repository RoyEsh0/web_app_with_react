{"ast":null,"code":"var _jsxFileName = \"/Users/tarikserezlic/Documents/Informationsarkitekt/Flerplattform javascript/projekt/web_app_with_react/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\n\n// Define a custom icon using Unicode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst planeIcon = new L.DivIcon({\n  html: '<div style=\"font-size: 20px; color: blue;\">✈️</div>',\n  className: '' // Clear default styles\n});\nconst Map = () => {\n  _s();\n  const [flights, setFlights] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchFlights = async () => {\n    try {\n      const response = await fetch('https://opensky-network.org/api/states/all');\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      const data = await response.json();\n      if (data.states && Array.isArray(data.states)) {\n        const flightsData = data.states.filter(state => state[5] !== null && state[6] !== null) // Filter out flights with null lat/lng\n        .map(state => ({\n          callsign: state[1],\n          latitude: state[6],\n          longitude: state[5],\n          altitude: state[7]\n        })).slice(0, 50); // Limit to 50 flights\n        setFlights(flightsData);\n      } else {\n        throw new Error('Unexpected data format');\n      }\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchFlights();\n    const interval = setInterval(fetchFlights, 5000); // Fetch data every 5 seconds\n\n    return () => clearInterval(interval); // Clean up on unmount\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [54.5260, 15.2551],\n    zoom: 4,\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), flights.map((flight, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [flight.latitude, flight.longitude],\n      icon: planeIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Flight: \", flight.callsign, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 39\n        }, this), \" Altitude: \", flight.altitude, \" ft\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"ZAybFA5rfhjqV5X0n+VocBOgtgg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","planeIcon","DivIcon","html","className","Map","_s","flights","setFlights","error","setError","fetchFlights","response","fetch","ok","Error","statusText","data","json","states","Array","isArray","flightsData","filter","state","map","callsign","latitude","longitude","altitude","slice","console","message","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","flight","index","position","icon","_c","$RefreshReg$"],"sources":["/Users/tarikserezlic/Documents/Informationsarkitekt/Flerplattform javascript/projekt/web_app_with_react/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\n\n// Define a custom icon using Unicode\nconst planeIcon = new L.DivIcon({\n  html: '<div style=\"font-size: 20px; color: blue;\">✈️</div>',\n  className: '', // Clear default styles\n});\n\nconst Map = () => {\n  const [flights, setFlights] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchFlights = async () => {\n    try {\n      const response = await fetch('https://opensky-network.org/api/states/all');\n      if (!response.ok) {\n        throw new Error('Network response was not ok ' + response.statusText);\n      }\n      const data = await response.json();\n      if (data.states && Array.isArray(data.states)) {\n        const flightsData = data.states\n          .filter((state) => state[5] !== null && state[6] !== null) // Filter out flights with null lat/lng\n          .map((state) => ({\n            callsign: state[1],\n            latitude: state[6],\n            longitude: state[5],\n            altitude: state[7],\n          }))\n          .slice(0, 50); // Limit to 50 flights\n        setFlights(flightsData);\n      } else {\n        throw new Error('Unexpected data format');\n      }\n    } catch (error) {\n      console.error('Error fetching flight data:', error);\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchFlights();\n    const interval = setInterval(fetchFlights, 5000); // Fetch data every 5 seconds\n\n    return () => clearInterval(interval); // Clean up on unmount\n  }, []);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <MapContainer center={[54.5260, 15.2551]} zoom={4} style={{ height: '100vh', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {flights.map((flight, index) => (\n        <Marker key={index} position={[flight.latitude, flight.longitude]} icon={planeIcon}>\n          <Popup>\n            Flight: {flight.callsign} <br /> Altitude: {flight.altitude} ft\n          </Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}